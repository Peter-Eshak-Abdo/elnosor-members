#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ì–°–ü–ö 32
"""

import os
import sys
import subprocess
import platform


def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python...")

    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        print(f"   –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è: {sys.version.split()[0]}")
        return False

    print(f"‚úÖ Python {sys.version.split()[0]}")
    return True


def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")

    try:
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        subprocess.check_call([
            sys.executable, '-m', 'pip', 'install', '-r', 'requirements.txt'
        ])

        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Kivy
        try:
            import kivy
            print(f"‚úÖ Kivy {kivy.__version__} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print("‚ö†Ô∏è Kivy –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É—Å—Ç–∞–Ω–æ–≤–∫–∞...")
            subprocess.check_call([
                sys.executable, '-m', 'pip', 'install', 'kivy==2.2.1'
            ])
            print("‚úÖ Kivy —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False

    return True


def setup_database():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    try:
        from database import DatabaseManager

        db = DatabaseManager()
        stats = db.get_database_stats()

        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        print(f"   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –ë–î: {stats.get('total_documents', 0)}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

    return True


def import_sample_data():
    """–ò–º–ø–æ—Ä—Ç –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüì• –ò–º–ø–æ—Ä—Ç –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")

    if os.path.exists('participants.json'):
        try:
            os.system(f"{sys.executable} import_participants_fixed.py")
            print("‚úÖ –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
    else:
        print("‚ö†Ô∏è –§–∞–π–ª participants.json –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ –∏–º–ø–æ—Ä—Ç–∞")


def run_tests():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")

    try:
        os.system(f"{sys.executable} test_gspk32.py")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")


def create_desktop_shortcut():
    """–°–æ–∑–¥–∞–Ω–∏–µ —è—Ä–ª—ã–∫–∞ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ"""
    print("\nüñ•Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —è—Ä–ª—ã–∫–∞ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ...")

    try:
        system = platform.system()

        if system == "Windows":
            # –°–æ–∑–¥–∞–Ω–∏–µ —è—Ä–ª—ã–∫–∞ –¥–ª—è Windows
            desktop = os.path.join(os.path.expanduser("~"), "Desktop")
            shortcut_path = os.path.join(desktop, "–ì–°–ü–ö 32.lnk")

            # –°–æ–∑–¥–∞–Ω–∏–µ VBS —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —è—Ä–ª—ã–∫–∞
            vbs_content = f'''
Set oWS = WScript.CreateObject("WScript.Shell")
sLinkFile = "{shortcut_path}"
Set oLink = oWS.CreateShortcut(sLinkFile)
oLink.TargetPath = "{sys.executable}"
oLink.Arguments = "run_gspk32.py app"
oLink.Description = "–ì–°–ü–ö 32 - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏"
oLink.WorkingDirectory = "{os.getcwd()}"
oLink.IconLocation = "{sys.executable}, 0"
oLink.Save
            '''

            vbs_file = os.path.join(os.getcwd(), "create_shortcut.vbs")
            with open(vbs_file, 'w') as f:
                f.write(vbs_content)

            os.system(f'cscript "{vbs_file}"')
            os.remove(vbs_file)

            print(f"‚úÖ –Ø—Ä–ª—ã–∫ —Å–æ–∑–¥–∞–Ω: {shortcut_path}")

        elif system == "Linux":
            # –°–æ–∑–¥–∞–Ω–∏–µ .desktop —Ñ–∞–π–ª–∞ –¥–ª—è Linux
            desktop_file = os.path.expanduser("~/Desktop/gspk32.desktop")

            desktop_content = f'''[Desktop Entry]
Version=1.0
Name=–ì–°–ü–ö 32
Comment=–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
Exec={sys.executable} {os.path.join(os.getcwd(), "run_gspk32.py")} app
Icon={sys.executable}
Terminal=true
Type=Application
Categories=Office;Database;
'''

            with open(desktop_file, 'w') as f:
                f.write(desktop_content)

            os.chmod(desktop_file, 0o755)
            print(f"‚úÖ –Ø—Ä–ª—ã–∫ —Å–æ–∑–¥–∞–Ω: {desktop_file}")

        else:
            print("‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —è—Ä–ª—ã–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è —ç—Ç–æ–π –û–°")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —è—Ä–ª—ã–∫–∞: {e}")


def show_success_message():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ"""
    print("\n" + "=" * 60)
    print("üéâ –ì–°–ü–ö 32 —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    print("=" * 60)
    print("\nüìÅ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤:")
    print(f"   {os.getcwd()}")
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
    print("   python run_gspk32.py app")
    print("   –∏–ª–∏ python main.py")
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:")
    print("   python run_gspk32.py test")
    print("\nüì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö:")
    print("   python run_gspk32.py import")
    print("\nüìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
    print("   –°–º. README_GSPK32.md")
    print("\n" + "=" * 60)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ì–°–ü–ö 32 - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    if not check_python_version():
        return

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if not install_dependencies():
        return

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not setup_database():
        return

    # –ò–º–ø–æ—Ä—Ç –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    import_sample_data()

    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    run_tests()

    # –°–æ–∑–¥–∞–Ω–∏–µ —è—Ä–ª—ã–∫–∞
    create_desktop_shortcut()

    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    show_success_message()


if __name__ == '__main__':
    main()
