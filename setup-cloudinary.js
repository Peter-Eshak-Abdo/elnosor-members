#!/usr/bin/env node

/**
 * Cloudinary Setup Script
 * This script helps set up Cloudinary configuration for the project
 */

const fs = require("fs");
const path = require("path");
const readline = require("readline");

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

function question(prompt) {
  return new Promise((resolve) => {
    rl.question(prompt, resolve);
  });
}

async function setupCloudinary() {
  console.log("üåü Cloudinary Setup for Church Youth App");
  console.log("=====================================");
  console.log("");

  console.log("This script will help you set up Cloudinary for image uploads.");
  console.log("You need a free Cloudinary account to continue.");
  console.log("");

  // Check if .env.local already exists
  const envPath = path.join(__dirname, ".env.local");
  const envExamplePath = path.join(__dirname, ".env.example");

  if (fs.existsSync(envPath)) {
    console.log("‚ö†Ô∏è  .env.local already exists!");
    const overwrite = await question("Do you want to overwrite it? (y/N): ");
    if (overwrite.toLowerCase() !== "y") {
      console.log("Setup cancelled.");
      rl.close();
      return;
    }
  }

  console.log("");
  console.log("üìù Please provide your Cloudinary credentials:");
  console.log("   (Get these from https://cloudinary.com ‚Üí Dashboard)");

  const cloudName = await question("   Cloud Name: ");
  const uploadPreset = await question("   Upload Preset: ");

  if (!cloudName.trim() || !uploadPreset.trim()) {
    console.log("‚ùå Cloud Name and Upload Preset are required!");
    rl.close();
    return;
  }

  // Create .env.local content
  const envContent = `# Cloudinary Configuration
# Generated by setup-cloudinary.js
NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=${cloudName.trim()}
NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET=${uploadPreset.trim()}

# Server-side Cloudinary (for admin operations)
CLOUDINARY_CLOUD_NAME=${cloudName.trim()}
CLOUDINARY_API_KEY=your_api_key_here
CLOUDINARY_API_SECRET=your_api_secret_here

# Note: For server-side operations, you'll also need:
# - CLOUDINARY_API_KEY (from Cloudinary Dashboard ‚Üí Account Details)
# - CLOUDINARY_API_SECRET (from Cloudinary Dashboard ‚Üí Account Details)
`;

  // Write .env.local
  fs.writeFileSync(envPath, envContent);

  console.log("");
  console.log("‚úÖ .env.local created successfully!");
  console.log("");
  console.log("üìã Next steps:");
  console.log("   1. Go to https://cloudinary.com ‚Üí Dashboard");
  console.log("   2. Go to Account Details ‚Üí API Keys");
  console.log("   3. Copy your API Key and API Secret");
  console.log("   4. Update .env.local with your API credentials");
  console.log("");
  console.log(
    "üöÄ After updating API credentials, restart your development server:"
  );
  console.log("   npm run dev");
  console.log("");
  console.log("üß™ Test the setup by uploading an image in your app.");
  console.log("");
  console.log("üìö For more help, see CLOUDINARY_SETUP.md");

  rl.close();
}

// Run the setup
setupCloudinary().catch(console.error);
